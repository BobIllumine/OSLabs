1st program output:
Hello
Hello

Such behaviour can be explained by line buffering (by default). Executing fork() creates 2 processes with shared memory, where buffer is not flushed. But after facing EOL, process flushes the buffer into the output stream due to line buffering.

2nd program output:
Hello

printf() here already contained the EOL character, so it flushed the buffer before the fork. After the fork each process prints the empty line due to that.